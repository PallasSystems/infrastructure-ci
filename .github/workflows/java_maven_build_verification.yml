name: Build Verification of Maven project

on:
  workflow_call:
    secrets:
      GPG_PRIVATE_KEY:
        required: true
      GPG_PRIVATE_KEY_PASSPHRASE:
        required: true
      SCM_USER:
        required: true
      SCM_TOKEN:
        required: true
      SONAR_TOKEN:
        required: true

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [17, 21]
    steps:
      - name: Check out Source Code
        uses: actions/checkout@v4.1.4

      - name: Set up JDK ${{ matrix.version }}
        uses: actions/setup-java@v4
        with:
          cache: 'maven'
          distribution: 'temurin'
          java-version: ${{ matrix.version }}

      - name: Retrieve Maven Settings File
        run: wget https://raw.githubusercontent.com/PallasSystems/infrastructure-ci/main/.github/workflows/java_maven_settings.xml -P /tmp/

      - name: Build with Maven
        run: mvn --batch-mode --settings /tmp/java_maven_settings.xml clean install
        env:
          GITHUB_USER: ${{ secrets.SCM_USER }}
          GITHUB_TOKEN: ${{ secrets.SCM_TOKEN }}

  analyse:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Source Code
        uses: actions/checkout@v4.1.4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          cache: 'maven'
          distribution: 'temurin'
          java-version: 21

      - name: Retrieve Maven Settings File
        run: wget https://raw.githubusercontent.com/PallasSystems/infrastructure-ci/main/.github/workflows/java_maven_settings.xml -P /tmp/

      - name: Jacoco Coverage
        run: mvn --batch-mode --settings /tmp/java_maven_settings.xml org.jacoco:jacoco-maven-plugin:0.8.8:prepare-agent test org.jacoco:jacoco-maven-plugin:0.8.8:report install
        env:
          GITHUB_USER: ${{ secrets.SCM_USER }}
          GITHUB_TOKEN: ${{ secrets.SCM_TOKEN }}
          GPG_KEY_ID: ${{ secrets.GPG_PRIVATE_KEYNAME }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}

      - name: Checkstyle
        run: mvn --batch-mode --settings /tmp/java_maven_settings.xml org.apache.maven.plugins:maven-checkstyle-plugin:3.3.0:checkstyle-aggregate
        env:
          GITHUB_USER: ${{ secrets.SCM_USER }}
          GITHUB_TOKEN: ${{ secrets.SCM_TOKEN }}
          GPG_KEY_ID: ${{ secrets.GPG_PRIVATE_KEYNAME }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}

      - name: Checkstyle Annotation
        uses: jwgmeligmeyling/checkstyle-github-action@master
        with:
          path: '**/checkstyle-result.xml'

      - name: SpotBugs
        run: mvn --batch-mode --settings /tmp/java_maven_settings.xml com.github.spotbugs:spotbugs-maven-plugin:4.8.3.1:spotbugs -Dspotbugs.xmlOutput=true -Dspotbugs.effort=max -Dspotbugs.failOnError=false -Dspotbugs.threshold=low
        env:
          GITHUB_USER: ${{ secrets.SCM_USER }}
          GITHUB_TOKEN: ${{ secrets.SCM_TOKEN }}
          GPG_KEY_ID: ${{ secrets.GPG_PRIVATE_KEYNAME }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}

      - name: SpotBugs Annotation
        uses: jwgmeligmeyling/spotbugs-github-action@master
        with:
          path: '**/spotbugsXml.xml'

      - name: PMD
        run: mvn --batch-mode --settings /tmp/java_maven_settings.xml --file pom.xml pmd:pmd pmd:cpd
        env:
          GITHUB_USER: ${{ secrets.SCM_USER }}
          GITHUB_TOKEN: ${{ secrets.SCM_TOKEN }}

      - name: PMD Annotation
        uses: jwgmeligmeyling/pmd-github-action@master
        with:
          path: '**/pmd.xml'

      - name: SonarCloud Analysis
        run: mvn --batch-mode --settings /tmp/java_maven_settings.xml --file pom.xml org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
        env:
          GITHUB_USER: ${{ secrets.SCM_USER }}
          GITHUB_TOKEN: ${{ secrets.SCM_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
