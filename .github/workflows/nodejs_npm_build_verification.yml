name: Check Node.JS version support

on:
  workflow_call:
    secrets:
      SCM_USER:
        required: true
      SCM_TOKEN:
        required: true
      SONAR_TOKEN:
        required: true

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.X, 20.x, 22.x]

    steps:
      - uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up Node.JS ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Find yarn cache
        id: yarn-cache-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup Pallas Scoped Github package repository
        run: echo "@pallassystems:registry=https://npm.pkg.github.com/" >> ~/.npmrc

      - name: Add authentication for scoped package repository
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.SCM_TOKEN }}" >> ~/.npmrc

      - name: Add normal registry
        run: echo "registry=https://registry.npmjs.org" >> ~/.npmrc

      - name: Run NPM Install
        run: npm ci

      - name: Run NPM Build
        run: npm run build --if-present

      - name: Run NPM Test
        run: npm run test --if-present

      - name: Build docs
        if: ${{ hashFiles('docs/package.json') != '' }}
        run: |
          cd docs
          npm ci --if-present
          npm run build --if-present
          npm run test --if-present
