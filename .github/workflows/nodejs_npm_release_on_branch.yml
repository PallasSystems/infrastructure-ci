name: Release NPM project

on:
  workflow_call:
    secrets:
      SCM_USER:
        required: true
      SCM_TOKEN:
        required: true
      SONAR_TOKEN:
        required: true
      SCM_REPOSITORY:
        required: true
      GPG_PRIVATE_KEY:
        required: true
      GPG_PRIVATE_KEY_PASSPHRASE:
        required: true
      NPM_TOKEN:
        required: true

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  actions: read
  checks: write
  id-token: write
  issues: write
  packages: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - name: Set up Node.JS 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          registry-url: https://registry.npmjs.org
      - name: Find yarn cache
        id: yarn-cache-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Configure GPG key settings
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}
          git_user_signingkey: true
          git_config_global: true
          git_committer_name: 'pallasCI'
          git_committer_email: 'continuous.integration@pallas.uk'
          git_commit_gpgsign: true
          git_push_gpgsign: false
          git_tag_gpgsign: true

      - name: Extract branch name
        id: extract_branch
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        shell: bash
        run: echo "VERSION=$(echo ${GITHUB_REF#refs/heads/} | tr / - | sed 's/release-*//')" >> $GITHUB_ENV

      - name: Set Project Version
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        run: 'npm version ${{ env.VERSION }} -m "[NPM Release] Performing release: ${{ env.VERSION }}"'
        continue-on-error: true

      - name: Run NPM Install
        run: npm ci

      - name: Run NPM Build
        run: npm run build --if-present

      - name: Run NPM Test
        run: npm run test --if-present -- --coverage --passWithNoTests

      - name: Publish package on NPM ðŸ“¦
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        run: |
          git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          npm publish --access public
        env:
          GITHUB_USER: 'pallasCI <continuous.integration@pallas.uk>'
          GITHUB_TOKEN: ${{ secrets.SCM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push the Release Change into the Branch
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        run: git push origin ${GITHUB_REF}

      - name: Increase Patch Version
        run: 'npm version patch -m "[NPM Release] Moving to Next Dev Version"'

      - name: Push the Patch change into the Branch
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        run: git push origin ${GITHUB_REF}

      - name: Create pull request into main
        run: |
          gh_pr_up() { gh pr create $* || gh pr edit $* }
          gh_pr_up --title "Merge Release back to main" --body "Performed successfull release, needs to be merged back into main branch"
  