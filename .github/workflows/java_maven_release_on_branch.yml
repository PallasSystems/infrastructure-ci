name: Release Maven project

on:
  workflow_call:
    inputs:
      JAVA_VERSION:
        description: 'The Version of Java to use when compiling'
        default: '21'
        required: false
        type: string
      MAVEN_ARGS:
        description: 'The Maven CLI options to use in the build command'
        default: --batch-mode --show-version --settings /tmp/java_maven_settings.xml
        required: false
        type: string
      MAVEN_PREPARE_OPTS:
        description: 'Additional Maven CLI Properties to be supplied as part of the prepare step'
        default: -Dgoals=clean,deploy,site,site:stage,scm-publish:publish-scm
        required: false
        type: string
      MAVEN_PERFORM_OPTS:
          description: 'Additional Maven CLI Properties to be supplied as part of the perform steps'
          default: -Dgoals=clean,jacoco:prepare-agent,deploy,jacoco:report,spotbugs:spotbugs,pmd:pmd,pmd:cpd,org.sonarsource.scanner.maven:sonar-maven-plugin:sonar,site,site:stage,scm-publish:publish-scm
          required: false
          type: string
    secrets:
      GPG_PRIVATE_KEY:
        required: true
      GPG_PRIVATE_KEY_PASSPHRASE:
        required: true
      SCM_USER:
        required: true
      SCM_TOKEN:
        required: true
      SONAR_TOKEN:
        required: true

permissions:
  contents: write
  actions: read
  checks: write
  issues: write
  packages: write
  pages: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Source Code
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          token: ${{ secrets.SCM_TOKEN }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          cache: 'maven'
          distribution: 'temurin'
          java-version: 21

      - name: Configure GPG key settings
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}
          git_user_signingkey: true
          git_config_global: true
          git_committer_name: 'pallasCI'
          git_committer_email: 'continuous.integration@pallas.uk'
          git_commit_gpgsign: true
          git_push_gpgsign: false
          git_tag_gpgsign: true

      - name: Extract branch name
        id: extract_branch
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / - | sed 's/release-*//')" >> $GITHUB_ENV

      - name: Retrieve Maven Settings File
        run: wget https://raw.githubusercontent.com/PallasSystems/infrastructure-ci/main/.github/workflows/java_maven_settings.xml -P /tmp/

      - name: Prepare Release with Maven
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        run: mvn release:prepare -DreleaseVersion=${{ env.BRANCH_NAME }} -Dskin.version=${{ env.BRANCH_NAME }}
        env:
          GITHUB_USER: ${{ secrets.SCM_USER }}
          GITHUB_TOKEN: ${{ secrets.SCM_TOKEN }}
          GPG_KEY_ID: ${{ secrets.GPG_PRIVATE_KEYNAME }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}
          MAVEN_ARGS: ${{ inputs.MAVEN_ARGS }}
          MAVEN_OPTS: ${{ inputs.MAVEN_PREPARE_OPTS }} 

      - name: Release with Maven
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        run: mvn release:perform -DreleaseVersion=${{ env.BRANCH_NAME }} -Dskin.version=${{ env.BRANCH_NAME }}
        env:
          GITHUB_USER: ${{ secrets.SCM_USER }}
          GITHUB_TOKEN: ${{ secrets.SCM_TOKEN }}
          GPG_KEY_ID: ${{ secrets.GPG_PRIVATE_KEYNAME }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}
          MAVEN_ARGS: ${{ inputs.MAVEN_ARGS }}
          MAVEN_OPTS: ${{ inputs.MAVEN_PERFORM_OPTS }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Create pull request into main
        uses: repo-sync/pull-request@v2
        with:
          source_branch: release/${{ env.BRANCH_NAME }}
          destination_branch: 'main'
          github_token: ${{ secrets.SCM_TOKEN }}
          pr_title: 'Merge Release back to main'
          pr_body: 'Performed successfull release, needs to be merged back into main branch'

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 'v${{ env.BRANCH_NAME }}'
          path: '**/target/*${{ env.BRANCH_NAME }}*'
